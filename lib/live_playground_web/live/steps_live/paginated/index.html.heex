<.header>
  Listing Languages
  <:subtitle>
    Add pagination to generated LiveView
  </:subtitle>
  <:actions>
    <.link patch={get_pagination_url(@options, ~p"/steps/paginated/new")}>
      <.button>New Language</.button>
    </.link>
  </:actions>
</.header>

<form phx-change="update-pagination" class="flex flex-col gap-y-2 items-end justify-end md:flex-row md:gap-y-0 md:justify-between">
  <div class={["text-sm", @item_deleted && "text-zinc-300", !@item_deleted && "text-zinc-600"]}>
    <%= get_page_summary(@count_all_summary, @options.page, @options.per_page, @count_view) %>
  </div>
  <div class="flex items-center">
    <label for="rows-per-page" class="mr-2 text-zinc-600 text-sm">
      Rows per page:
    </label>
    <.input type="select" name="per_page" options={[5, 10, 20, 50, 100]} value={@options.per_page} />
  </div>
</form>

<.table
  id="languages"
  rows={@streams.languages}
  row_click={fn {_id, language} -> JS.navigate(get_pagination_url(@options, ~p"/steps/paginated/#{language}")) end}
  row_class={fn {_id, language} -> get_row_class(language) end}
>
  <:col :let={{_id, language}} label="Countrycode">
    <%= language.countrycode %>
    <span
      :if={Map.get(language, :created, false)}
      id={"created-badge-#{language.id}"}
      class="ml-1 inline-flex items-center rounded-full bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20"
    >
      New
    </span>
    <span
      :if={Map.get(language, :updated, false)}
      id={"updated-badge-#{language.id}"}
      class="ml-1 inline-flex items-center rounded-full bg-blue-50 px-2 py-1 text-xs font-medium text-blue-400 ring-1 ring-inset ring-blue-500/20"
    >
      Edited
    </span>
    <span
      id={"deleted-badge-#{language.id}"}
      class="ml-1 hidden items-center rounded-full bg-zinc-50 px-2 py-1 text-xs font-medium text-zinc-400 ring-1 ring-inset ring-zinc-500/10"
    >
      Deleted
    </span>
    <dl class="hidden md:block font-normal text-xs text-zinc-400">
      <dt>Stream inserted:</dt>
      <dd><%= Timex.now() %></dd>
    </dl>
  </:col>
  <:col :let={{_id, language}} label="Isofficial"><%= language.isofficial %></:col>
  <:col :let={{_id, language}} label="Language"><%= language.language %></:col>
  <:col :let={{_id, language}} label="Percentage"><%= language.percentage %></:col>
  <:action :let={{_id, language}}>
    <div class="action sr-only">
      <.link navigate={get_pagination_url(@options, ~p"/steps/paginated/#{language}")}>Show</.link>
    </div>
    <.link class="action" patch={get_pagination_url(@options, ~p"/steps/paginated/#{language}/edit")}>Edit</.link>
  </:action>
  <:action :let={{id, language}}>
    <.link
      class="action"
      phx-click={
        JS.push("delete", value: %{id: language.id})
        |> hide("##{id} .action")
        |> hide("#created-badge-#{language.id}")
        |> hide("#updated-badge-#{language.id}")
        |> JS.show(to: "#deleted-badge-#{language.id}", display: "inline-flex")
        |> JS.add_class("bg-zinc-50 text-zinc-400 line-through", to: "##{id} span:not(#deleted-badge-#{language.id})")
      }
      data-confirm="Are you sure?"
    >
      Delete
    </.link>
  </:action>
</.table>

<.pagination event="update-pagination" page={@options.page} per_page={@options.per_page} count_all={@count_all_pagination} />

<.modal
  :if={@live_action in [:new, :edit]}
  id="language-modal"
  show
  on_cancel={JS.patch(get_pagination_url(@options, ~p"/steps/paginated"))}
>
  <.live_component
    module={LivePlaygroundWeb.StepsLive.Paginated.FormComponent}
    id={@language.id || :new}
    title={@page_title}
    action={@live_action}
    language={@language}
    patch={get_pagination_url(@options, ~p"/steps/paginated")}
  />
</.modal>
